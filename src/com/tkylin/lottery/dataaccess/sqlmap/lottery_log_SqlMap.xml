<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="lottery_log">
  <resultMap class="com.tkylin.lottery.dataaccess.entity.LotteryLog" id="ibatorgenerated_BaseResultMap">
    <result column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="prize" jdbcType="INTEGER" property="prize" />
    <result column="prize_name" jdbcType="VARCHAR" property="prizeName" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="ibatorgenerated_Example_Where_Clause">
    <iterate conjunction="or" prepend="where" property="oredCriteria" removeFirstPrepend="iterate">
      <isEqual compareValue="true" property="oredCriteria[].valid">
        (
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithoutValue">
          $oredCriteria[].criteriaWithoutValue[]$
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithSingleValue">
          $oredCriteria[].criteriaWithSingleValue[].condition$
            #oredCriteria[].criteriaWithSingleValue[].value#
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithListValue">
          $oredCriteria[].criteriaWithListValue[].condition$
          <iterate close=")" conjunction="," open="(" property="oredCriteria[].criteriaWithListValue[].values">
            #oredCriteria[].criteriaWithListValue[].values[]#
          </iterate>
        </iterate>
        <iterate conjunction="and" prepend="and" property="oredCriteria[].criteriaWithBetweenValue">
          $oredCriteria[].criteriaWithBetweenValue[].condition$
          #oredCriteria[].criteriaWithBetweenValue[].values[0]# and
          #oredCriteria[].criteriaWithBetweenValue[].values[1]#
        </iterate>
        )
      </isEqual>
    </iterate>
  </sql>
  <select id="ibatorgenerated_selectByExample" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLogExample" resultMap="ibatorgenerated_BaseResultMap">
    select id, uid, prize, prize_name, create_time, ip, status, update_time
    from lottery_log
    <isParameterPresent>
      <include refid="lottery_log.ibatorgenerated_Example_Where_Clause" />
      <isNotNull property="orderByClause">
        order by $orderByClause$
      </isNotNull>
      <isNotNull property="limitClause">
        limit $limitClause$
      </isNotNull>
    </isParameterPresent>
  </select>
  <select id="ibatorgenerated_selectByPrimaryKey" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLog" resultMap="ibatorgenerated_BaseResultMap">
    select id, uid, prize, prize_name, create_time, ip, status, update_time
    from lottery_log
    where id = #id:BIGINT#
  </select>
  <delete id="ibatorgenerated_deleteByPrimaryKey" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLog">
    delete from lottery_log
    where id = #id:BIGINT#
  </delete>
  <delete id="ibatorgenerated_deleteByExample" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLogExample">
    delete from lottery_log
    <include refid="lottery_log.ibatorgenerated_Example_Where_Clause" />
  </delete>
  <insert id="ibatorgenerated_insert" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLog">
    insert into lottery_log (uid, prize, prize_name, create_time, ip, status, update_time)
    values (#uid:BIGINT#, #prize:INTEGER#, #prizeName:VARCHAR#, #createTime:TIMESTAMP#,
      #ip:VARCHAR#, #status:INTEGER#, #updateTime:TIMESTAMP#)
    <selectKey keyProperty="id" resultClass="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
  </insert>
  <select id="ibatorgenerated_countByExample" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLogExample" resultClass="java.lang.Integer">
    select count(*) from lottery_log
    <include refid="lottery_log.ibatorgenerated_Example_Where_Clause" />
  </select>
  <update id="ibatorgenerated_updateByExampleSelective">
    update lottery_log
    <dynamic prepend="set">
      <isNotNull prepend="," property="record.id">
        id = #record.id:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.uid">
        uid = #record.uid:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="record.prize">
        prize = #record.prize:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.prizeName">
        prize_name = #record.prizeName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.createTime">
        create_time = #record.createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="record.ip">
        ip = #record.ip:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="record.status">
        status = #record.status:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="record.updateTime">
        update_time = #record.updateTime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    <isParameterPresent>
      <include refid="lottery_log.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByExample">
    update lottery_log
    set id = #record.id:BIGINT#,
      uid = #record.uid:BIGINT#,
      prize = #record.prize:INTEGER#,
      prize_name = #record.prizeName:VARCHAR#,
      create_time = #record.createTime:TIMESTAMP#,
      ip = #record.ip:VARCHAR#,
      status = #record.status:INTEGER#,
      update_time = #record.updateTime:TIMESTAMP#
    <isParameterPresent>
      <include refid="lottery_log.ibatorgenerated_Example_Where_Clause" />
    </isParameterPresent>
  </update>
  <update id="ibatorgenerated_updateByPrimaryKeySelective" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLog">
    update lottery_log
    <dynamic prepend="set">
      <isNotNull prepend="," property="uid">
        uid = #uid:BIGINT#
      </isNotNull>
      <isNotNull prepend="," property="prize">
        prize = #prize:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="prizeName">
        prize_name = #prizeName:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="createTime">
        create_time = #createTime:TIMESTAMP#
      </isNotNull>
      <isNotNull prepend="," property="ip">
        ip = #ip:VARCHAR#
      </isNotNull>
      <isNotNull prepend="," property="status">
        status = #status:INTEGER#
      </isNotNull>
      <isNotNull prepend="," property="updateTime">
        update_time = #updateTime:TIMESTAMP#
      </isNotNull>
    </dynamic>
    where id = #id:BIGINT#
  </update>
  <update id="ibatorgenerated_updateByPrimaryKey" parameterClass="com.tkylin.lottery.dataaccess.entity.LotteryLog">
    update lottery_log
    set uid = #uid:BIGINT#,
      prize = #prize:INTEGER#,
      prize_name = #prizeName:VARCHAR#,
      create_time = #createTime:TIMESTAMP#,
      ip = #ip:VARCHAR#,
      status = #status:INTEGER#,
      update_time = #updateTime:TIMESTAMP#
    where id = #id:BIGINT#
  </update>
</sqlMap>